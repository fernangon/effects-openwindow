
body {
    background: url(progreso.jpg);
    overflow: hidden;
    font-family: sans-serif;
    font-size: 1.6rem;
}


p {
    margin: 0;

    line-height: 1.5;
    font-size: 19px;

    color: khaki;
}

p:not(:last-child) {
    margin-bottom: 1.5rem;
}


img {
    display: block;

    max-width: 100%;
}

h1 {
    color: yellowgreen;
}

a {
    text-decoration: none;
}


.page {
    display: flex;

    min-height: 100vh; /* Hace que la página de fondo blanco con el texto, quede debajo de la página inicial con la foto y el botón. */
}

.page .page-container {
    max-width: 1200px;

    margin: auto;

    padding-left: 1rem;
    padding-right: 1rem;
}


/*  -------------------- 
    CSS :target Selector
    --------------------

    URLs with an # followed by an anchor name link to a certain element within a document. The element being linked to is the target element.

    The :target selector can be used to style the current active target element.

    https://www.w3schools.com/cssref/sel_target.asp 
*/
#popup-article:target {
    display: flex;
}


.page .page-container .open-popup {
    padding: 18px 55px;

    border: 3px solid white;
    border-radius: 50px;

    text-transform: uppercase;

    color: white;
}


/* Pantalla fondo blanco con texto */
.popup {
    display: none; /* De momento la oculta. */

    position: fixed;
    top: 0;
    right: 0;

    width: 100%;
    height: 100vh;
}

.popup::before {
    content: "";

    position: fixed;
    top: 50%;
    left: 0;

    width: 100%;

    background-color: violet;

    box-sizing: border-box;

    /*  -----------
        will-change
        -----------

        The will-change CSS property hints to browsers how an element is expected to change. 
        Browsers may set up optimizations before an element is actually changed. 
        These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.

        https://developer.mozilla.org/en-US/docs/Web/CSS/will-change 
    */
    will-change: height, top;
    
    /* 
        Por orden están puestos:
            animation-name
            animation-duration
            animation-timing-function
            animation-delay
            animation-fill-mode 
    */
    animation: open-animation .6s cubic-bezier(.83, .04, 0, 1.16) .65s both;
}

/* La raya que se desplaza por el centro de la pantalla de izquierda a derecha */
.popup::after {
    content: "";

    position: absolute; /* Posicionado con respecto a su ancestro posicionado más cercano: ".popup" */
    top: 50%;
    left: 0;

    width: 0;
    height: 2px;

    margin-top: -1px;

    background-color: violet;

    will-change: width, opacity;

    animation: line-animation 1s cubic-bezier(.83, .04, 0, 1.16) both;
}


.popup-block {
    position: relative;

    margin: auto;

    padding: 5% 15%;

    height: calc(100vh - 40px);

    box-sizing: border-box;
    overflow: auto;

    animation: fade 1.3s ease-out 1.3s both;
}


.popup-close {
    position: fixed;
    top: 50px;
    right: 100px;

    width: 3.2rem;
    height: 3.2rem;

    
}


button {
    padding: 16px 36px;

    border: 2px solid white;

    background: transparent;
    color: yellow;
}





/* KEYFRAMES ------------------------------------------------------------------------ */

@keyframes line-animation {
    0% {
        width: 0;
        opacity: 1; /* Se ve normal. */
    }

    99% {
        width: 100%;
        opacity: 1;
    }

    100% {
        width: 100%;
        opacity: 0; /* Transparente. */
    }
}


@keyframes open-animation {
    0% {
        top: 50%;
        height: 0;
    }

    100% {
        top: 0;
        height: 100vh;
    }
}


@keyframes fade {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}


























